#!/usr/bin/env bash
set -euo pipefail

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
error_handler() {
    echo "‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–æ–∫–µ $1: –∫–æ–º–∞–Ω–¥–∞ '$2' –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º $3"
    echo "üìç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏:"
    echo "   PWD: $(pwd)"
    echo "   APP_PATH: ${APP_PATH:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
    echo "   BUILD_DIR: ${BUILD_DIR:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
    exit $3
}

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
trap 'error_handler ${LINENO} "$BASH_COMMAND" $?' ERR

echo "üöÄ –£–ü–ê–ö–û–í–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø"
echo "–í—Ä–µ–º—è: $(date)"
echo "üîß –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   PWD: $(pwd)"
echo "   BUILT_PRODUCTS_DIR: ${BUILT_PRODUCTS_DIR:-'–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}"
echo "   PROJECT_DIR will be: $(cd "$(dirname "$0")/.." && pwd)"

# ===================================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –≥–¥–µ –∑–∞–¥–∞—é—Ç—Å—è –≤—Å–µ –ø—É—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# ===================================================================

PROJECT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
APP_NAME="Killah Prototype.app"
PYTHON_VERSION="3.12"
VENV_NAME="venv"

# URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ Python.framework
PYTHON_FRAMEWORK_URL="https://github.com/python/cpython-bin-deps/releases/download/20231002/cpython-3.12.0%2B20231002-x86_64-apple-darwin-install_only.tar.gz"
PYTHON_FRAMEWORK_LOCAL="/Library/Frameworks/Python.framework"

# –ü—É—Ç–∏ —Å–±–æ—Ä–∫–∏ –∏–∑ Xcode (—Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
if [ -z "${BUILT_PRODUCTS_DIR:-}" ]; then
  echo "‚ö†Ô∏è  BUILT_PRODUCTS_DIR –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
  BUILD_DIR="$PROJECT_DIR/build/Debug"
else
  BUILD_DIR="$BUILT_PRODUCTS_DIR"
fi

APP_PATH="$BUILD_DIR/$APP_NAME"
FRAMEWORKS_DIR="$APP_PATH/Contents/Frameworks"
RESOURCES_DIR="$APP_PATH/Contents/Resources"
VENV_DST="$RESOURCES_DIR/$VENV_NAME"

echo "üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $APP_PATH"

# ===================================================================
# –ü–†–û–í–ï–†–ö–ò –ò –ü–û–î–ì–û–¢–û–í–ö–ê
# ===================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .app
if [ ! -d "$APP_PATH" ]; then
  echo "‚ùå .app –Ω–µ –Ω–∞–π–¥–µ–Ω: $APP_PATH"
  exit 1
fi
echo "‚úÖ .app –Ω–∞–π–¥–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
mkdir -p "$FRAMEWORKS_DIR"
mkdir -p "$RESOURCES_DIR"

# ===================================================================
# –ü–û–õ–£–ß–ï–ù–ò–ï PYTHON.FRAMEWORK
# ===================================================================

get_python_framework() {
  local framework_dst="$FRAMEWORKS_DIR/Python.framework"
  
  if [ -d "$PYTHON_FRAMEWORK_LOCAL" ]; then
    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Python.framework..."
    cp -R -L "$PYTHON_FRAMEWORK_LOCAL" "$FRAMEWORKS_DIR/"
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
  else
    echo "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω—ã–π Python.framework –Ω–µ –Ω–∞–π–¥–µ–Ω: $PYTHON_FRAMEWORK_LOCAL"
    echo "üì• –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω—ã–π Python.framework..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    local temp_dir=$(mktemp -d)
    trap "rm -rf $temp_dir" EXIT
    
    local archive_path="$temp_dir/python-framework.tar.gz"
    
    echo "üåê –°–∫–∞—á–∏–≤–∞–µ–º —Å: $PYTHON_FRAMEWORK_URL"
    if curl -L -o "$archive_path" "$PYTHON_FRAMEWORK_URL"; then
      echo "‚úÖ –ê—Ä—Ö–∏–≤ —Å–∫–∞—á–∞–Ω"
      
      echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º Python.framework..."
      cd "$temp_dir"
      tar -xzf "$archive_path"
      
      # –ò—â–µ–º Python.framework –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º –∞—Ä—Ö–∏–≤–µ
      local extracted_framework=$(find . -name "Python.framework" -type d | head -1)
      if [ -n "$extracted_framework" ]; then
        echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–π Python.framework..."
        cp -R -L "$extracted_framework" "$FRAMEWORKS_DIR/"
        echo "‚úÖ Python.framework –∏–∑ –∞—Ä—Ö–∏–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
      else
        echo "‚ùå Python.framework –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ"
        exit 1
      fi
    else
      echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Python.framework"
      echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python.framework –ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ URL"
      exit 1
    fi
  fi
}

get_python_framework

# ===================================================================
# –°–û–ó–î–ê–ù–ò–ï –í–ò–†–¢–£–ê–õ–¨–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø
# ===================================================================

echo "üìã –°–æ–∑–¥–∞–µ–º venv..."
PYTHON_BIN="$FRAMEWORKS_DIR/Python.framework/Versions/$PYTHON_VERSION/bin/python3"

if [ ! -f "$PYTHON_BIN" ]; then
  echo "‚ùå Python binary –Ω–µ –Ω–∞–π–¥–µ–Ω: $PYTHON_BIN"
  exit 1
fi

"$PYTHON_BIN" -m venv "$VENV_DST"
echo "‚úÖ venv —Å–æ–∑–¥–∞–Ω"

# ===================================================================
# –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
# ===================================================================

echo "üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
source "$VENV_DST/bin/activate"
pip install --upgrade pip
pip install -r "$PROJECT_DIR/Resources/requirements.txt"
deactivate
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# ===================================================================
# –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í
# ===================================================================

echo "üìã –ö–æ–ø–∏—Ä—É–µ–º Python —Ñ–∞–π–ª—ã..."
cp "$PROJECT_DIR/Resources/autocomplete.py" "$RESOURCES_DIR/"
cp "$PROJECT_DIR/Resources/minillm_export.pt" "$RESOURCES_DIR/"
cp "$PROJECT_DIR/Resources/requirements.txt" "$RESOURCES_DIR/"
echo "‚úÖ Python —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"

# ===================================================================
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ò –ü–û–î–ü–ò–°–¨
# ===================================================================

echo "üìã –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫..."
PYBIN="$VENV_DST/bin/python3"
install_name_tool -change \
  "/Library/Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
  "@executable_path/../../../Frameworks/Python.framework/Versions/$PYTHON_VERSION/lib/libpython${PYTHON_VERSION}.dylib" \
  "$PYBIN"
echo "‚úÖ –ü—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"

echo "üìã –ü–µ—Ä–µ–ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º python3..."
codesign --force --sign - "$PYBIN"
echo "‚úÖ –ü–µ—Ä–µ–ø–æ–¥–ø–∏—Å–∞–Ω–æ"

# ===================================================================
# –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø
# ===================================================================

echo "üéâ –£–ü–ê–ö–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "   –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $(du -sh "$APP_PATH" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   Python.framework: $(du -sh "$FRAMEWORKS_DIR/Python.framework" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   venv: $(du -sh "$VENV_DST" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
echo "   –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
